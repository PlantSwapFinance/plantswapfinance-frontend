/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'

type GLTFResult = GLTF & {
  nodes: {
    meGrowBoxBottom: THREE.Mesh
    meGrowBoxMid: THREE.Mesh
    meSupportBeamBottom: THREE.Mesh
  }
  materials: {
    Material: THREE.MeshStandardMaterial
    ['Material.001']: THREE.MeshStandardMaterial
  }
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/verticalGarden.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.meGrowBoxBottom.geometry} material={materials.Material} scale={[1, 0.47, 1]} />
      <mesh
        geometry={nodes.meGrowBoxMid.geometry}
        material={materials['Material.001']}
        position={[0, 1.56, 0]}
        scale={[0.75, 0.27, 0.75]}
      />
      <mesh
        geometry={nodes.meSupportBeamBottom.geometry}
        material={nodes.meSupportBeamBottom.material}
        position={[0, 0.7, 0]}
        scale={[0.2, 0.6, 0.2]}
      />
    </group>
  )
}

useGLTF.preload('/verticalGarden.glb')
